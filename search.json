[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache 2.0 License","title":"Apache 2.0 License","text":"Copyright 2025 University Florida Licensed Apache License, Version 2.0 (“License”); may use file except compliance License. may obtain copy License http://www.apache.org/licenses/LICENSE-2.0 Unless required applicable law agreed writing, software distributed License distributed “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied. See License specific language governing permissions limitations License.","code":""},{"path":"/articles/getting_started.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TL;DR","title":"Getting started with redcapfiller","text":"Populating project 5 records data simple ","code":"library(redcapfiller) generated_values <- get_project_values(redcap_uri, token)  purrr::walk(   generated_values,   ~ REDCapR::redcap_write(     redcap_uri = redcap_uri,     token = token,     ds_to_write = .x   ) )"},{"path":"/articles/getting_started.html","id":"generating-the-data","dir":"Articles","previous_headings":"","what":"Generating the data","title":"Getting started with redcapfiller","text":"goal redcapfiller generate test dataset complex project design using nothing project design. required inputs redcap_uri, uri REDCap host’s API interface, token, API token project host. object returned get_project_values() always list. classic projects, like example, list always length 1. make sense run get_project_values() longitudinal project. list element tibble filled-rectangle data. Don’t distracted character data types numeric columns. still conform project design.","code":"library(redcapfiller) generated_values <- get_project_values(redcap_uri, token) #> 1 rows were read from REDCap in 0.1 seconds.  The http status code was 200. #> The data dictionary describing 20 fields was read from REDCap in 0.1 seconds.  The http status code was 200. #> 26 variable metadata records were read from REDCap in 0.1 seconds.  The http status code was 200. #> The data dictionary describing 20 fields was read from REDCap in 0.1 seconds.  The http status code was 200. #> 1 instrument metadata records were read from REDCap in 0.1 seconds.  The http status code was 200. #> 1 rows were read from REDCap in 0.1 seconds.  The http status code was 200. #> 0 data access groups were read from REDCap in 0.1 seconds.  The http status code was 200. #> 335 records and 1 columns were read from REDCap in 0.2 seconds.  The http status code was 200. #> Starting to read 335 records  at 2025-07-09 10:38:00.078375. #> Reading batch 1 of 4, with subjects 1 through 100 (ie, 100 unique subject records). #> 100 records and 26 columns were read from REDCap in 0.2 seconds.  The http status code was 200. #> Reading batch 2 of 4, with subjects 101 through 200 (ie, 100 unique subject records). #> 100 records and 26 columns were read from REDCap in 0.2 seconds.  The http status code was 200. #> Reading batch 3 of 4, with subjects 201 through 300 (ie, 100 unique subject records). #> 100 records and 26 columns were read from REDCap in 0.2 seconds.  The http status code was 200. #> Reading batch 4 of 4, with subjects 301 through 335 (ie, 35 unique subject records). #> 35 records and 26 columns were read from REDCap in 0.2 seconds.  The http status code was 200. typeof(generated_values) #> [1] \"list\" length(generated_values) #> [1] 1 generated_values[[1]] |>     rmarkdown::paged_table()"},{"path":"/articles/getting_started.html","id":"writing-the-data","dir":"Articles","previous_headings":"","what":"Writing the data","title":"Getting started with redcapfiller","text":"Writing synthetic data REDCap requires walk list write list element. easy purrr::walk()","code":"purrr::walk(   generated_values,   ~ REDCapR::redcap_write(     redcap_uri = redcap_uri,     token = token,     ds_to_write = .x   ) ) #> Starting to update 5 records to be written at 2025-07-09 10:38:03.445047. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 0.5 seconds."},{"path":"/articles/getting_started.html","id":"longitudinal-data","dir":"Articles","previous_headings":"","what":"Longitudinal data","title":"Getting started with redcapfiller","text":"redcapfiller can handle longitudinal projects number forms, events, form-event relationships. code exactly , generated data complex. longitudinal example adding five records project form-event matrix: get_project_values() detects longitudinal features project creates list element nine longitudinal events. element data forms fields event. write operation uses code, time nine write events five records .","code":"library(redcapfiller) generated_values <- get_project_values(redcap_uri, token) length(generated_values) #> [1] 9 purrr::walk(   generated_values,   ~ REDCapR::redcap_write(     redcap_uri = redcap_uri,     token = token,     ds_to_write = .x   ) ) #> Starting to update 5 records to be written at 2025-07-09 10:38:11.825083. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 1.5 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:13.830707. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 1.3 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:15.609931. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 1.2 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:17.343435. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 1.1 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:18.982538. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 1.1 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:20.588319. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 1.3 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:22.411334. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 1.0 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:23.928275. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 0.5 seconds. #> Starting to update 5 records to be written at 2025-07-09 10:38:24.912486. #> Writing batch 1 of 1, with indices 1 through 5. #> 5 records were written to REDCap in 0.5 seconds."},{"path":"/articles/getting_started.html","id":"get_project_values-parameters","dir":"Articles","previous_headings":"","what":"get_project_values() parameters","title":"Getting started with redcapfiller","text":"can specify number records want generate. longitudinal project, can specify vector events want fill.","code":"library(redcapfiller) generated_values <- get_project_values(   redcap_uri,   token,   number_of_records_to_populate = 10 ) generated_values[[1]] |>   nrow() #> [1] 10 library(redcapfiller) generated_values <- get_project_values(   redcap_uri,   token,   events = c(\"screening_arm_1\", \"week_2_arm_1\") ) length(generated_values) #> [1] 2"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Philip Chase. Author, maintainer. Sai Pavan Kamma. Author. Laurence James-Woodley. Author. Taryn Stoffs. Contributor. Natalie Williams. Contributor. William Beasley. Contributor. Aidan Wilson. Contributor. Christopher Battiston. Contributor. Christopher Barnes. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chase P, Kamma S, James-Woodley L (2025). redcapfiller: Fill REDCap Project synthetic data. R package version 0.1.3, https://ctsit.github.io/redcapfiller/.","code":"@Manual{,   title = {redcapfiller: Fill a REDCap Project with synthetic data},   author = {Philip Chase and Sai Pavan Kamma and Laurence James-Woodley},   year = {2025},   note = {R package version 0.1.3},   url = {https://ctsit.github.io/redcapfiller/}, }"},{"path":"/index.html","id":"redcap-filler","dir":"","previous_headings":"","what":"Fill a REDCap Project with synthetic data","title":"Fill a REDCap Project with synthetic data","text":"REDCap Filler provides testing development service users Vanderbilt University’s REDCap. generates loads synthetic test data REDCap project, using project’s design guide test data generation. data-driven process allows rapid data creation minimal effort. provides low-cost way test many project features. creates test data input reporting downstream processes.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fill a REDCap Project with synthetic data","text":"redcapfiller package available source code GitHub. Install GitHub inside R RStudio using remotes package:","code":"install.packages(\"remotes\") # Run this line if the 'remotes' package hasn't been installed already. remotes::install_github(\"ctsit/redcapfiller\")"},{"path":"/index.html","id":"using-redcap-filler","dir":"","previous_headings":"","what":"Using REDCap Filler","title":"Fill a REDCap Project with synthetic data","text":"See Getting started redcapfiller learn use redcapfiller.","code":""},{"path":"/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Fill a REDCap Project with synthetic data","text":"REDCap Filler yet understand dimensions modern REDCap project. can fill categorical fields. can fill unvalidated text fields text validation types date, datetime, email, integer, number, phone, zip code. ignores field types validation types attempt fill . Filler can fill classic longitudinal projects, repeating forms, repeating events, randomization enabled. honor form display logic ignores fields governed branching logic. Works classic projects longitudinal projects. Uses REDCap API read project design write synthetic data. Fills categorical fields (providing uniform random distribution). Provides random-normal distributions numeric date fields. Uses “Lorem ipsum” text non-validated text fields. Injects simple default randomness practicable types. Leaves form completed fields set ‘Incomplete’ (red). violate basic data constraints defined data dictionary (e.g., validation types, ranges applicable). Populates specified events longitudinal projects. Fills specified number records. Current Limitations: yet support projects repeating instruments repeating events. yet support projects randomization enabled. Ignores fields governed Branching Logic (BL) attempt fill . evaluate Form Display Logic (FDL). yet support text validation types beyond listed .","code":""},{"path":"/index.html","id":"futures","dir":"","previous_headings":"","what":"Futures","title":"Fill a REDCap Project with synthetic data","text":"project aims populate complex REDCap projects using project design. REDCap API exposes design dimension, plan use guide Filler populates projects. Yet, take time develop fully. proposed timeline features: Complete support text validation types currently missing. Add support repeating events repeating forms. Skip randomization fields allow support projects randomization. Allow users specify non-uniform distributions categorical fields non-default distributions range fields. Allow configuration inter-record intra-record date offsets. Add support evaluating Branching Logic. Add support evaluating Form Display Logic.","code":""},{"path":"/index.html","id":"collaborative-development","dir":"","previous_headings":"","what":"Collaborative development","title":"Fill a REDCap Project with synthetic data","text":"encourage input collaboration. ’re familiar GitHub R packages, submit pull request. ’d like report bug suggest, please create GitHub issue; issues usually good place ask public questions, . However, email Philip prefer offline dialog (pbc@ufl.edu). ’d like thank REDCap Community advice contributions design REDCap Filler.","code":""},{"path":"/reference/get_categorical_field_response_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate categorical field response values — get_categorical_field_response_values","title":"Generate categorical field response values — get_categorical_field_response_values","text":"Provide set response values categorical field categorical_field_responses","code":""},{"path":"/reference/get_categorical_field_response_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate categorical field response values — get_categorical_field_response_values","text":"","code":"get_categorical_field_response_values(categorical_field_responses)"},{"path":"/reference/get_categorical_field_response_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate categorical field response values — get_categorical_field_response_values","text":"categorical_field_responses long dataframe categorical field response values weights.","code":""},{"path":"/reference/get_categorical_field_response_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate categorical field response values — get_categorical_field_response_values","text":"long dataframe categorical field response values one row value set.","code":""},{"path":"/reference/get_categorical_field_response_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate categorical field response values — get_categorical_field_response_values","text":"","code":"if (FALSE) { # \\dontrun{ get_categorical_field_response_values(categorical_field_responses) } # }"},{"path":"/reference/get_categorical_field_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Get every categorical field response from a REDCap data dictionary — get_categorical_field_responses","title":"Get every categorical field response from a REDCap data dictionary — get_categorical_field_responses","text":"Given REDCap data dictionary, enumerate every response value every categorical field data dictionary","code":""},{"path":"/reference/get_categorical_field_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get every categorical field response from a REDCap data dictionary — get_categorical_field_responses","text":"","code":"get_categorical_field_responses(metadata)"},{"path":"/reference/get_categorical_field_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get every categorical field response from a REDCap data dictionary — get_categorical_field_responses","text":"metadata REDCap data dictionary","code":""},{"path":"/reference/get_categorical_field_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get every categorical field response from a REDCap data dictionary — get_categorical_field_responses","text":"long dataframe columns field_name First item field_type Second item response_code Second item response_label Second item field_group Second item weight set uniform weights across responses field","code":""},{"path":"/reference/get_categorical_field_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get every categorical field response from a REDCap data dictionary — get_categorical_field_responses","text":"","code":"if (FALSE) { # \\dontrun{ categorical_field_responses <-   get_categorical_field_responses(metadata_to_populate) } # }"},{"path":"/reference/get_notes_field_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate notes field content — get_notes_field_values","title":"Generate notes field content — get_notes_field_values","text":"Generate lorem ipsum text content notes field notes_fields","code":""},{"path":"/reference/get_notes_field_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate notes field content — get_notes_field_values","text":"","code":"get_notes_field_values(notes_fields)"},{"path":"/reference/get_notes_field_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate notes field content — get_notes_field_values","text":"notes_fields long dataframe notes fields REDCap data dictionary (typically output get_notes_fields())","code":""},{"path":"/reference/get_notes_field_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate notes field content — get_notes_field_values","text":"tall dataframe notes field content one row per field","code":""},{"path":"/reference/get_notes_field_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate notes field content — get_notes_field_values","text":"","code":"if (FALSE) { # \\dontrun{ notes_responses <- get_notes_field_values(notes_fields) } # }"},{"path":"/reference/get_notes_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Get notes fields from a REDCap data dictionary and annotate them with weights — get_notes_fields","title":"Get notes fields from a REDCap data dictionary and annotate them with weights — get_notes_fields","text":"Given REDCap data dictionary, function returns rows field type notes.","code":""},{"path":"/reference/get_notes_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get notes fields from a REDCap data dictionary and annotate them with weights — get_notes_fields","text":"","code":"get_notes_fields(metadata)"},{"path":"/reference/get_notes_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get notes fields from a REDCap data dictionary and annotate them with weights — get_notes_fields","text":"metadata REDCap data dictionary","code":""},{"path":"/reference/get_notes_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get notes fields from a REDCap data dictionary and annotate them with weights — get_notes_fields","text":"long dataframe following columns: field_name name field. form_name form name field located. field_type type field (always notes). weight uniform weight, set 100.","code":""},{"path":"/reference/get_notes_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get notes fields from a REDCap data dictionary and annotate them with weights — get_notes_fields","text":"","code":"if (FALSE) { # \\dontrun{ notes_fields <- get_notes_fields(metadata_to_populate) } # }"},{"path":"/reference/get_one_rectangle_of_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a rectangle of data for one record — get_one_rectangle_of_values","title":"Generate a rectangle of data for one record — get_one_rectangle_of_values","text":"Generate rectangle data one record","code":""},{"path":"/reference/get_one_rectangle_of_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a rectangle of data for one record — get_one_rectangle_of_values","text":"","code":"get_one_rectangle_of_values(   one_record_id = 1,   record_id_name,   forms_to_fill,   fields_and_responses,   event_name = NA_character_ )"},{"path":"/reference/get_one_rectangle_of_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a rectangle of data for one record — get_one_rectangle_of_values","text":"one_record_id single record_id record_id_name column name record_id returned forms_to_fill forms fill rectangle fields_and_responses output get_text_fields(), get_slider_fields(), get_notes_fields(),  get_categorical_field_responses() functions event_name event name include column record_id; default NA_character_. NA, omit column compatibility.","code":""},{"path":"/reference/get_one_rectangle_of_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a rectangle of data for one record — get_one_rectangle_of_values","text":"rectangle data appropriate REDCap identifiers ready write REDCap","code":""},{"path":"/reference/get_one_rectangle_of_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a rectangle of data for one record — get_one_rectangle_of_values","text":"","code":"if (FALSE) { # \\dontrun{ get_one_rectangle_of_values(1, record_id_name, forms_to_fill) } # }"},{"path":"/reference/get_project_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Project Values — get_project_values","title":"Get Project Values — get_project_values","text":"Generate dataset synthetic data REDCap project using project design retrieved via REDCap API.","code":""},{"path":"/reference/get_project_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Project Values — get_project_values","text":"","code":"get_project_values(   redcap_uri,   token,   events = NULL,   number_of_records_to_populate = 5 )"},{"path":"/reference/get_project_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Project Values — get_project_values","text":"redcap_uri REDCap API URI token REDCap project API token events optional vector event names fill (defaults events) number_of_records_to_populate optional number records generate (default 5)","code":""},{"path":"/reference/get_project_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Project Values — get_project_values","text":"list data frames (one per event, just one classic projects). list element contains dataframe synthetic data forms event. dataframe ready load REDCap.","code":""},{"path":"/reference/get_slider_field_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate slider field values — get_slider_field_values","title":"Generate slider field values — get_slider_field_values","text":"Generate values slider field slider_values","code":""},{"path":"/reference/get_slider_field_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate slider field values — get_slider_field_values","text":"","code":"get_slider_field_values(slider_values)"},{"path":"/reference/get_slider_field_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate slider field values — get_slider_field_values","text":"slider_values long data set slider values weights.","code":""},{"path":"/reference/get_slider_field_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate slider field values — get_slider_field_values","text":"long dataframe slider values one row field","code":""},{"path":"/reference/get_slider_field_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate slider field values — get_slider_field_values","text":"","code":"if (FALSE) { # \\dontrun{ get_slider_field_values(slider_values) } # }"},{"path":"/reference/get_slider_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Get slider field from a REDCap data dictionary — get_slider_fields","title":"Get slider field from a REDCap data dictionary — get_slider_fields","text":"Given REDCap data dictionary, enumerate every slider field data dictionary including select choices, min max values, add mean standard deviation derived min max values.","code":""},{"path":"/reference/get_slider_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get slider field from a REDCap data dictionary — get_slider_fields","text":"","code":"get_slider_fields(metadata)"},{"path":"/reference/get_slider_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get slider field from a REDCap data dictionary — get_slider_fields","text":"metadata REDCap data dictionary","code":""},{"path":"/reference/get_slider_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get slider field from a REDCap data dictionary — get_slider_fields","text":"long dataframe columns field_name REDCap field name form_name REDCap form name field_type REDCap field type select_choices_or_calculations RedCap select_choices_or_calculations field text_validation_min REDCap text validation min text_validation_max REDCap text validation max mean mean data generated. derived allowed range values sd standard deviation data generated. derived allowed range values","code":""},{"path":"/reference/get_slider_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get slider field from a REDCap data dictionary — get_slider_fields","text":"","code":"if (FALSE) { # \\dontrun{ slider_fields <-   get_slider_fields(metadata_to_populate) } # }"},{"path":"/reference/get_text_field_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text field values — get_text_field_values","title":"Generate text field values — get_text_field_values","text":"Generate values field text_fields. function addresses text validation types","code":""},{"path":"/reference/get_text_field_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text field values — get_text_field_values","text":"","code":"get_text_field_values(text_fields)"},{"path":"/reference/get_text_field_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text field values — get_text_field_values","text":"text_fields long dataframe text fields, parameters, weights.","code":""},{"path":"/reference/get_text_field_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text field values — get_text_field_values","text":"long dataframe text field values one row value set.","code":""},{"path":"/reference/get_text_field_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text field values — get_text_field_values","text":"","code":"if (FALSE) { # \\dontrun{ get_text_field_values(text_fields) } # }"},{"path":"/reference/get_text_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Get every text field from a REDCap data dictionary — get_text_fields","title":"Get every text field from a REDCap data dictionary — get_text_fields","text":"Given REDCap data dictionary, enumerate every text field data dictionary along validation types, min, max, append text_validation_type (tvt) function name, weight, mean, standard deviation needed.","code":""},{"path":"/reference/get_text_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get every text field from a REDCap data dictionary — get_text_fields","text":"","code":"get_text_fields(metadata)"},{"path":"/reference/get_text_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get every text field from a REDCap data dictionary — get_text_fields","text":"metadata REDCap data dictionary","code":""},{"path":"/reference/get_text_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get every text field from a REDCap data dictionary — get_text_fields","text":"dataframe columns field_name REDCap field name form_name REDCap form name field_type REDCap field type text_validation_type REDCap text validation type text_validation_min REDCap text validation min text_validation_max REDCap text validation max tvt text validation type function name weight default weight field mean mean data generated derived min max sd standard deviation data generated derived min max","code":""},{"path":"/reference/get_text_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get every text field from a REDCap data dictionary — get_text_fields","text":"","code":"if (FALSE) { # \\dontrun{ text_fields <-   get_text_fields(metadata_to_populate) } # }"},{"path":"/reference/redcapfiller-package.html","id":null,"dir":"Reference","previous_headings":"","what":"redcapfiller: Fill a REDCap Project with synthetic data — redcapfiller-package","title":"redcapfiller: Fill a REDCap Project with synthetic data — redcapfiller-package","text":"Fill REDCap project synthetic data based project design minimal set inputs.","code":""},{"path":[]},{"path":"/reference/redcapfiller-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"redcapfiller: Fill a REDCap Project with synthetic data — redcapfiller-package","text":"Maintainer: Philip Chase pbc@ufl.edu (ORCID) Authors: Sai Pavan Kamma saipavankamma@ufl.edu (ORCID) Laurence James-Woodley lawjames1@ufl.edu (ORCID) contributors: Taryn Stoffs tls@ufl.edu (ORCID) [contributor] Natalie Williams (ORCID) [contributor] William Beasley whb4@ou.edu (ORCID) [contributor] Aidan Wilson aidan.wilson@intersect.org.au (ORCID) [contributor] Christopher Battiston chris.battiston@wchospital.ca (ORCID) [contributor] Christopher Barnes cpb@ufl.edu (ORCID) [contributor]","code":""},{"path":"/news/index.html","id":"redcapfiller-013-released-2025-07-09","dir":"Changelog","previous_headings":"","what":"redcapfiller 0.1.3 (released 2025-07-09)","title":"redcapfiller 0.1.3 (released 2025-07-09)","text":"Fix heading README (@pbchase)","code":""},{"path":"/news/index.html","id":"redcapfiller-012-released-2025-07-08","dir":"Changelog","previous_headings":"","what":"redcapfiller 0.1.2 (released 2025-07-08)","title":"redcapfiller 0.1.2 (released 2025-07-08)","text":"Enable Roxygen2 markdown support (@pbchase, #44) Reorganize ‘Reference’ section pkgdown website (@pbchase, #44) Add URL BugReports DESCRIPTION (@pbchase) Add contributors DESCRIPTION CITATION.cff (@pbchase, #43) Make functions internal (@pbchase, #42)","code":""},{"path":"/news/index.html","id":"redcapfiller-011-released-2025-06-11","dir":"Changelog","previous_headings":"","what":"redcapfiller 0.1.1 (released 2025-06-11)","title":"redcapfiller 0.1.1 (released 2025-06-11)","text":"Fix initial release errors (@pbchase, #36)","code":""},{"path":"/news/index.html","id":"redcapfiller-010-released-2025-06-10","dir":"Changelog","previous_headings":"","what":"redcapfiller 0.1.0 (released 2025-06-10)","title":"redcapfiller 0.1.0 (released 2025-06-10)","text":"Initial release (@pbchase, @saipavan10-git, @ljwoodley) Works classic projects longitudinal projects. Uses REDCap API read project design write generated data. Fills categorical fields (providing uniform random distribution). Provides random-normal distributions numeric date fields. Uses “Lorem ipsum” text non-validated text fields. Injects simple default randomness practicable types. Leaves form completed fields set ‘Incomplete’ (red). violate basic data constraints defined data dictionary (e.g., validation types, ranges applicable). Populates specified events longitudinal projects. Fills specified number records.","code":""}]
